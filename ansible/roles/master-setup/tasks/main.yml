---

#- name: Add APT keys
#  apt_key: keyserver={{ item.keyserver }} id={{ item.id }} state={{ item.state | default("present") }}
#  loop: "{{ global.apt_keys }}"
#  tags: configuration

# For Let's Encrypt
#- name: Setup Debian repositories
#  apt_repository:
#    repo: "{{ item.repo }}"
#    state: "{{ item.state | default('present') }}"
#    filename: "{{ item.filename }}"
#  loop: "{{ global.apt_repositories }}"
#  tags: configuration

- name: Setup Debian packages configuration (debconf)
  debconf: name="{{ item.name }}" question="{{ item.question }}" value="{{ item.value }}" vtype="{{ item.vtype }}"
  loop: "{{ global_debconf_defaults }}"
  tags: configuration

- name: Force LANG to en_US
  ansible.builtin.blockinfile:
    path: /etc/environment
    block: |
      LANG=en_US.UTF-8
      LC_ALL=en_US.UTF-8
  tags: configuration

- name: Install packages
  ansible.builtin.apt:
    name: "{{ global_packages_apt }}"
    state: present
  tags: packages

- name: Install system Pip packages
  ansible.builtin.pip:
    name: "{{ global_packages_pip_system }}"
    state: present
    extra_args: "--system"
  tags: packages

- name: Install global /etc files
  copy: src="etcfiles/{{ item.name }}" dest="/etc/" mode={{ item.mode | default("0644") }} owner=root group=root
  loop: "{{ global_etcfiles }}"
  tags: configuration

#- name: Install Git config
#  template: src=gitconfig.j2 dest={{ me.home }}/.gitconfig mode="0600" owner=farzy group=farzy
#  tags: configuration

- name: Switch main user to Zsh
  ansible.builtin.user:
    name: "{{ user_owner }}"
    shell: /usr/bin/zsh
  tags: configuration

- name: Test existence of Oh My Zsh
  ansible.builtin.stat:
    path: .oh-my-zsh
  register: omz
  become: false
  tags:
    - configuration
    - zsh

- name: Install Oh My Zsh
  block:
    - name: Download OMZ installation script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/omz-install.sh
        mode: '0755'
    - name: Run OMZ installation script
      ansible.builtin.shell: /tmp/omz-install.sh --unattended --keep-zshrc
  when: not omz.stat.exists
  become: false
  tags:
    - configuration
    - zsh

- name: Create iTerm2 directory
  ansible.builtin.file:
    path: "{{ user_home }}/.iterm2"
    owner: "{{ user_owner }}"
    group: "{{ user_group }}"
    mode: 0755
    state: directory
  tags: configuration

- name: Install personal config files
  ansible.builtin.template:
    src: "dotfiles/{{ item.name }}"
    dest: "{{ user_home }}/{{ item.name }}"
    mode: "{{ item.mode | default('0644') }}"
    owner: "{{ user_owner }}"
    group: "{{ user_group }}"
  loop: "{{ user_dotfiles }}"
  tags: configuration

#- name: Install Dropbox
#  become: yes
#  become_user: farzy
#  shell: cd ~ && wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
#  args:
#    creates: "{{ me.home }}/.dropbox-dist"
#  tags: packages
#
#- name: Sysctl settings for Dropbox
#  sysctl: name="fs.inotify.max_user_watches" value=100000 sysctl_set=yes state=present reload=yes
#
#- name: Unit file for Dropbox
#  template: src="dropbox-farzy.service.j2" dest="/lib/systemd/system/dropbox-farzy.service" mode="0644" owner=root group=root
##  notify: Reload systemd
#
#- name: Activate Dropbox Unit
#  service: name="dropbox-farzy" enabled=yes state=started
