---

- name: Remove Brew packages
  homebrew:
    name: "{{ homebrew_packages_removed }}"
    state: absent
  tags:
    - packages

- name: Install Brew packages
  homebrew:
    name: "{{ homebrew_packages | reject('equalto', omit) | list }}"
    state: present
  tags:
    - packages

- name: Detect Cask google-cloud-sdk
  shell:
    cmd: "brew info google-cloud-sdk | grep 'Not installed' ; exit 0"
  register: brew_gcloud_installed
  check_mode: false
  changed_when: false
  tags:
    - packages

- name: Install google-cloud-sdk
  homebrew:
    name: homebrew/cask/google-cloud-sdk
    state: present
  when: '"Not installed" in brew_gcloud_installed.stdout'
  tags:
    - packages

- name: List installed Helm plugins
  shell:
    cmd: "helm plugin list | tail -n +2 | cut -f 1"
  register: helm_plugins
  check_mode: false
  changed_when: false
  tags:
    - packages
    - helm

- name: Install Helm plugins
  shell:
    cmd: "helm plugin install {{ item.url }} || helm plugin update {{ item.name }}"
  loop:
    - url: https://github.com/hypnoglow/helm-s3.git
      name: s3
  when: item.name not in helm_plugins.stdout
  tags:
    - packages
    - helm

- name: Test the installation of Oh My Zsh
  stat:
    path: "{{ oh_my_zsh_home }}"
  register: stat_omz
  check_mode: false
  tags:
    - configuration
    - zsh

- name: Download the Oh My Zsh installer
  get_url:
    url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/omz-installer.sh
    mode: '0755'
  when: stat_omz.stat.exists == False
  tags:
    - configuration
    - zsh

- name: Install Oh My Zsh
  shell:
    cmd: "/tmp/omz-installer.sh"
    chdir: /tmp
  when: stat_omz.stat.exists == False
  tags:
    - configuration
    - zsh

- name: Install OMZ theme Powerlevel10k
  git:
    repo: "https://github.com/romkatv/powerlevel10k.git"
    version: "master"
    dest: "{{ oh_my_zsh_home }}/custom/themes/powerlevel10k"
    accept_hostkey: yes
  tags:
    - configuration
    - zsh

- name: Install ZSH Autosuggestions plugin
  git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
    version: "master"
    dest: "{{ oh_my_zsh_home }}/custom/plugins/zsh-autosuggestions"
    accept_hostkey: yes
  tags:
    - configuration
    - zsh

- name: Find Brew prefix directory
  shell:
    cmd: "brew --prefix"
  register: brew_prefix
  check_mode: false
  changed_when: false
  tags:
    - configuration
    - zsh

- name: Fix some permissions
  file:
    path: '{{ brew_prefix.stdout_lines[0] }}/{{ item }}'
    mode: '755'
    state: directory
    recurse: false
  loop:
    - share
    - share/zsh
    - share/zsh/site-functions
  tags:
    - configuration
    - zsh

# Change Ansible/Jinja block delimiters in order to avoid issues with shell
# syntax '${%â€¦}'.
- name: Install personal config files
  template:
    src: "dotfiles/{{ item }}"
    dest: "~/{{ item }}"
    block_start_string: "{|"
    block_end_string: "|}"
  loop:
    - .gitconfig
    - .gitconfig-personal
    - .gitconfig-professional
    - .gitignore_global
    - .p10k.zsh
    - .tmux.conf
    - .zshrc
  tags:
    - configuration
    - zsh

- name: Create iTerm2 DynamicProfiles
  template:
    src: "iTerm2/personal.json.j2"
    dest: "{{ iterm2_library_path }}/DynamicProfiles/personal.json"
  tags:
    - configuration
    - iterm2

# -----------------
# SSH configuration
# -----------------

- name: Create .ssh directory
  ansible.builtin.file:
    path: ~/.ssh
    state: directory
    mode: '0755'
  when: integration_dfns
  tags:
    - configuration
    - ssh

- name: Find GPG agent SSH socket
  ansible.builtin.shell:
    cmd: gpgconf --list-dirs agent-ssh-socket
  register: agent_ssh_socket
  check_mode: false
  ignore_errors: true
  when: integration_dfns
  tags:
    - configuration
    - ssh

- name: Create .ssh/config
  ansible.builtin.template:
    src: ssh/config.j2
    dest: ~/.ssh/config
    mode: '0755'
  when: integration_dfns and not agent_ssh_socket.failed
  tags:
    - configuration
    - ssh
